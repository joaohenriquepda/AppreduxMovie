Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/joaohenrique/Git/AppReduxMovie/src/components/ToDoList.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

var _redux = require('redux');

var _reactRedux = require('react-redux');

var _ToDos = require('../actions/ToDos');

var todoActions = _interopRequireWildcard(_ToDos);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  ToDoList: {
    displayName: 'ToDoList'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/joaohenrique/Git/AppReduxMovie/src/components/ToDoList.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var ToDoList = _wrapComponent('ToDoList')(function (_Component) {
  _inherits(ToDoList, _Component);

  function ToDoList(props) {
    _classCallCheck(this, ToDoList);

    var _this = _possibleConstructorReturn(this, (ToDoList.__proto__ || Object.getPrototypeOf(ToDoList)).call(this, props));

    _this.addTodo = function () {
      _this.props.addToDo(_this.state.text);
      _this.setState({ text: '' });
    };

    _this.state = {
      text: '',
      error: ''
    };

    return _this;
  }

  _createClass(ToDoList, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 33
          }
        },
        _react3.default.createElement(_reactNative.FlatList, {
          data: this.props.todos,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _react3.default.createElement(
              _reactNative.Text,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 36
                }
              },
              item.text
            );
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        }),
        _react3.default.createElement(
          _reactNativeElements.FormLabel,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 39
            }
          },
          'Name ToDo'
        ),
        _react3.default.createElement(_reactNative.TextInput, {
          shake: this.state.error,
          onChangeText: function onChangeText(text) {
            return _this2.setState({ text: text });
          },
          value: this.state.text,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 40
          }
        }),
        _react3.default.createElement(_reactNativeElements.Button, {
          raised: true,
          icon: { name: 'add' },
          onPress: function onPress() {
            _this2.addTodo();
          },
          title: 'Add new ToDo',
          __source: {
            fileName: _jsxFileName,
            lineNumber: 46
          }
        })
      );
    }
  }]);

  return ToDoList;
}(_react2.Component));

var mapStateToProps = function mapStateToProps(state) {
  return {
    todos: state.ToDoList
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)(todoActions, dispatch);
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ToDoList);


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center'
  }
});